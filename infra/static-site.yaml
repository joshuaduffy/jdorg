AWSTemplateFormatVersion: '2010-09-09'

Description: S3 bucket configured for hosting a static website, and a Route53 DNS record pointing at the bucket

Parameters:

  Subdomain:
    Type: String
    Description: The subdomain to use e.g. dev, test, prod

Conditions:

  HttpsEnabled: !Not [!Equals [ !ImportValue AcmCertificateArn, "AWS::NoValue" ]]
  HttpsDisabled: !Equals [ !ImportValue AcmCertificateArn, "AWS::NoValue" ]

Resources:

  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [".", [!Ref Subdomain, !ImportValue DomainName]]
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
    DeletionPolicy: Retain

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref 'WebsiteBucket'
      PolicyDocument:
        Statement:
        - Sid: PublicReadForGetBucketObjects
          Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource: !Join ['', ['arn:aws:s3:::', !Ref 'WebsiteBucket', /*]]

  WebsiteWithHttpsCloudFront:
    Type: AWS::CloudFront::Distribution
    Condition: HttpsEnabled
    Properties:
      DistributionConfig:
        Comment: Cloudfront Distribution pointing to S3 Bucket
        Origins:
        - DomainName: !Select [2, !Split ["/", !GetAtt WebsiteBucket.WebsiteURL]]
          Id: S3Origin
          CustomOriginConfig:
            HTTPPort: 80
            HTTPSPort: 443
            OriginProtocolPolicy: http-only
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: index.html
        Aliases:
        - !Join [".", [!Ref Subdomain, !ImportValue DomainName]]
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !ImportValue AcmCertificateArn
          SslSupportMethod: sni-only

  WebsiteWithHttpsDNSName:
    Type: AWS::Route53::RecordSetGroup
    Condition: HttpsEnabled
    Properties:
      HostedZoneName: !Join ['', [!ImportValue DomainName, .]]
      RecordSets:
      - Name: !Join [".", [!Ref Subdomain, !ImportValue DomainName]]
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !GetAtt [WebsiteWithHttpsCloudFront, DomainName]

  WebsiteWithoutHttpsCloudFront:
    Type: AWS::CloudFront::Distribution
    Condition: HttpsDisabled
    Properties:
      DistributionConfig:
        Comment: Cloudfront Distribution pointing to S3 Bucket
        Origins:
        - DomainName: !Select [2, !Split ["/", !GetAtt WebsiteBucket.WebsiteURL]]
          Id: S3Origin
          CustomOriginConfig:
            HTTPPort: 80
            HTTPSPort: 443
            OriginProtocolPolicy: http-only
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: index.html
        Aliases:
        - !Join [".", [!Ref Subdomain, !ImportValue DomainName]]
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !ImportValue AcmCertificateArn
          SslSupportMethod: sni-only

  WebsiteWithoutHttpsDNSName:
    Type: AWS::Route53::RecordSetGroup
    Condition: HttpsDisabled
    Properties:
      HostedZoneName: !Join ['', [!ImportValue DomainName, .]]
      RecordSets:
      - Name: !Join [".", [!Ref Subdomain, !ImportValue DomainName]]
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !GetAtt [WebsiteWithoutHttpsCloudFront, DomainName]





Outputs:

  BucketName:
    Value: !Ref 'WebsiteBucket'
    Description: S3 Bucket Name
    Export:
      Name: BucketName

  WebsiteWithHttpsCloudFrontEndpoint:
    Condition: HttpsEnabled
    Value: !GetAtt [WebsiteWithHttpsCloudFront, DomainName]
    Description: CloudFront distribution endpoint
    Export:
      Name: CloudFrontEndpoint

  WebsiteWithoutHttpsCloudFrontEndpoint:
    Condition: HttpsDisabled
    Value: !GetAtt [WebsiteWithoutHttpsCloudFront, DomainName]
    Description: CloudFront distribution endpoint
    Export:
      Name: CloudFrontEndpoint

  FullDomain:
    Value: !Join [".", [!Ref Subdomain, !ImportValue DomainName]]
    Description: FQDN
    Export:
      Name: FullDomain
